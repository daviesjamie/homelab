---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.18.2@sha256:fbe142ff2e02713740329ebb5981c6bb6fe54f8b4de18e98637c2ff586ea1935
            env:
              PAPERLESS_ACCOUNT_EMAIL_VERIFICATION: none
              PAPERLESS_CONSUMPTION_DIR: /nas/consumption
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_DATA_DIR: /data/data
              PAPERLESS_EXPORT_DIR: /nas/export
              PAPERLESS_MEDIA_ROOT: /data/media
              PAPERLESS_PORT: &port 8000
              PAPERLESS_REDIS: redis://paperless-redis.default.svc.cluster.local:6379
              PAPERLESS_TIME_ZONE: Europe/London
              PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"

              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBHOST: paperless-db-rw.database.svc.cluster.local
              PAPERLESS_DBNAME: paperless
              PAPERLESS_DBUSER:
                valueFrom:
                  secretKeyRef:
                    name: paperless-db-user
                    key: username
              PAPERLESS_DBPASS:
                valueFrom:
                  secretKeyRef:
                    name: paperless-db-user
                    key: password
            envFrom:
              - secret: paperless-credentials
      redis:
        containers:
          app:
            image:
              repository: docker.io/valkey/valkey
              tag: 9.0.0@sha256:4503e204c900a00ad393bec83c8c7c4c76b0529cd629e23b34b52011aefd1d27

    service:
      app:
        controller: app
        ports:
          http:
            port: *port
      redis:
        controller: redis
        ports:
          redis:
            port: 6379

    serviceMonitor:
      app:
        serviceName: paperless
        endpoints:
          - port: http

    route:
      app:
        hostnames: ["paperless.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: paperless
        advancedMounts:
          app:
            app:
              - path: /data
      nas:
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /volume1/paperless
        advancedMounts:
          app:
            app:
              - path: /nas
